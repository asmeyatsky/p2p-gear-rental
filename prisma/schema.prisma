// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @unique
  email       String    @unique
  full_name   String?
  gears       Gear[]
  rentedItems Rental[]  @relation("RenterRentals")
  ownedRentals Rental[] @relation("OwnerRentals")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Gear {
  id          String    @id @default(cuid())
  title       String
  description String
  dailyRate   Float
  weeklyRate  Float?
  monthlyRate Float?
  images      String[]
  city        String
  state       String
  category    String? // New field
  brand       String?
  model       String?
  condition   String?
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
  rentals     Rental[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Rental {
  id          String    @id @default(cuid())
  gearId      String
  gear        Gear      @relation(fields: [gearId], references: [id])
  renterId    String
  renter      User      @relation("RenterRentals", fields: [renterId], references: [id])
  ownerId     String
  owner       User      @relation("OwnerRentals", fields: [ownerId], references: [id])
  startDate   DateTime
  endDate     DateTime
  status          String    @default("pending") // pending, approved, rejected, completed
  message         String? // New field for basic messaging
  paymentIntentId String?
  clientSecret    String?
  paymentStatus   String? // e.g., 'requires_payment_method', 'requires_confirmation', 'succeeded', 'failed'
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}